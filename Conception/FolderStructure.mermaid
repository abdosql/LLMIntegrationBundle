graph TD
    A[LlmIntegrationBundle] --> B[src]
    A --> C[config]
    A --> D[tests]
    A --> E[Conception]
    A --> F[README.md]
    A --> G[LICENSE]
    A --> H[composer.json]
    A --> I[.gitignore]
    A --> J[composer.lock]

    B --> K[Attribute]
    B --> L[Client]
    B --> M[Command]
    B --> N[DependencyInjection]
    B --> O[Event]
    B --> P[EventListener]
    B --> Q[Exception]
    B --> R[Factory]
    B --> S[Interface]
    B --> T[Resources]
    B --> U[Response]
    B --> V[Services]
    B --> W[LlmIntegrationBundle.php]

    C --> X[packages]
    X --> Y[llm_integration.yaml]

    E --> Z[architecture.mermaid]
    E --> AA[FolderStructure.mermaid]

    K --> AB[AiClient.php]
    K --> AC[AiServiceProvider.php]

    L --> AD[ApiTogetherClient.php]
    L --> AE[OpenAiClient.php]

    M --> AF[CreateAiServiceCommand.php]

    N --> AG[Configuration.php]
    N --> AH[LlmIntegrationExtension.php]
    N --> AI[Compiler]
    AI --> AJ[AiClientConfigurationPass.php]
    AI --> AK[AiServiceAutoRegisterPass.php]

    O --> AL[LlmIntegrationExceptionEvent.php]

    P --> AM[LlmIntegrationExceptionListener.php]

    Q --> AN[AiClientException.php]
    Q --> AO[InvalidConfigurationException.php]
    Q --> AP[LlmIntegrationException.php]
    Q --> AQ[ModelNotFoundException.php]
    Q --> AR[ProviderNotFoundException.php]

    R --> AS[AiServiceFactory.php]

    S --> AT[AiClientInterface.php]
    S --> AU[AiServiceInterface.php]

    T --> AV[config]
    AV --> AW[services.yaml]

    U --> AX[AiResponse.php]

    V --> AY[ApiTogetherService.php]
    V --> AZ[OpenAiService.php]